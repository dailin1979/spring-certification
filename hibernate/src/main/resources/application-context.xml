<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
  <context:component-scan base-package="com.ld.hibernate"></context:component-scan>
  <!-- 引入资源文件 -->
  <context:property-placeholder
    location="classpath:db.properties" />
  <!-- 1.配置数据源 -->
  <!-- 测试c3p0数据源 -->
  <bean id="dataSource"
    class="com.mchange.v2.c3p0.ComboPooledDataSource">
    <property name="user" value="${jdbc.user}"></property>
    <property name="password" value="${jdbc.password}"></property>
    <property name="jdbcUrl" value="${jdbc.url}"></property>
    <property name="driverClass" value="${jdbc.driver}"></property>
    <property name="initialPoolSize" value="${jdbc.initPoolSize}"></property>
    <property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
  </bean>
  <!--  配置Hibernate的SessionFactory实例， 通过Spring提供的LocalSessionFactoryBean进行配置-->
  <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    <!--    配置数据源属性-->
    <property name="dataSource" ref="dataSource"></property>
    <!--    配置hibernate的配置文件的名称和位置 -->
    <property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
    <!--    配置hibernate 的隐射文件的位置和名称，可以使用通配符-->
<!--    在maven的pom文件中需要配置xml-->
    <property name="mappingLocations" value="classpath:com/ld/hibernate/mapping/*.hbm.xml"></property>
  </bean>

<!--  配置spring 的声明式事务-->
<!--  1. 配置spring为hibernate配置的事务管理器-->
  <bean id="hibernateTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory"></property>
  </bean>

<!--  2. 配置事务属性-->
  <tx:advice id="txAdvice" transaction-manager="hibernateTransactionManager">
    <tx:attributes>
      <tx:method name="get*" read-only="true"/>
      <tx:method name="checkout" propagation="SUPPORTS"/>
      <tx:method name="purchase" propagation="REQUIRES_NEW"/>
      <tx:method name="*"/>
    </tx:attributes>
  </tx:advice>

<!--  3. 配置事务切点，并且将切点和事务属性关联起来-->
  <aop:config>
    <aop:pointcut id="txPointcut" expression="execution(* com.ld.hibernate.service.*.*(..))"/>
<!--    <aop:pointcut id="txPointcut" expression="execution(* com.ld.hibernate.dao.*.*(..))"/>-->
    <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"></aop:advisor>
  </aop:config>
</beans>